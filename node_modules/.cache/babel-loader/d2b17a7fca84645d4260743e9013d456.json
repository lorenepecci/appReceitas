{"ast":null,"code":"var _jsxFileName = \"/home/lorene/Trybe/MeusProjetosPessoais/appReceitas/src/components/DetailedComponent.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport PropTypes from 'prop-types';\nimport React, { useContext, useState } from 'react';\nimport Context from '../context/Context';\nimport Favorites from './ButtonFavorites';\nimport Share from './ButtonShare';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst copy = require('clipboard-copy');\n\nfunction DetailedComponent(_ref) {\n  _s();\n\n  let {\n    foodOrDrink,\n    id\n  } = _ref;\n  const {\n    dataDetailed,\n    listOfIngredients\n  } = useContext(Context);\n  const newData = dataDetailed[0];\n  const [isLinkCopied, setIsLinkCopied] = useState(false);\n\n  const handleClick = () => {\n    copy(window.location.href);\n    setIsLinkCopied(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        \"data-testid\": \"recipe-photo\",\n        src: newData.strMealThumb || newData.strDrinkThumb,\n        alt: \"Imagem da receita pronta\",\n        width: \"200px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          \"data-testid\": \"recipe-title\",\n          children: newData.strMeal || newData.strDrink\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          \"data-testid\": \"share-btn\",\n          onClick: handleClick,\n          children: /*#__PURE__*/_jsxDEV(Share, {\n            datatestid: \"img-share-btn\",\n            alt: \"Icone de compartilhamento\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Favorites, {\n          alt: \"Icone de favoritar\",\n          foodOrDrink: foodOrDrink,\n          id: id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), isLinkCopied ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Link copied!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 26\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"p\", {\n        \"data-testid\": \"recipe-category\",\n        children: foodOrDrink === 'foods' ? newData.strCategory : newData.strAlcoholic\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Ingredients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: Object.values(listOfIngredients.ingredients).map((value, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            \"data-testid\": `${index}-ingredient-name-and-measure`,\n            children: `${value} - ${Object.values(listOfIngredients.measure)[index]}`\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Instructions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": \"instructions\",\n          children: newData.strInstructions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DetailedComponent, \"o6xiM6PMDDxYz1+uDYB1UXx4bDo=\");\n\n_c = DetailedComponent;\nDetailedComponent.propTypes = {\n  foodOrDrink: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired\n};\nexport default DetailedComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailedComponent\");","map":{"version":3,"sources":["/home/lorene/Trybe/MeusProjetosPessoais/appReceitas/src/components/DetailedComponent.js"],"names":["PropTypes","React","useContext","useState","Context","Favorites","Share","copy","require","DetailedComponent","foodOrDrink","id","dataDetailed","listOfIngredients","newData","isLinkCopied","setIsLinkCopied","handleClick","window","location","href","strMealThumb","strDrinkThumb","strMeal","strDrink","strCategory","strAlcoholic","Object","values","ingredients","map","value","index","measure","strInstructions","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport PropTypes from 'prop-types';\nimport React, { useContext, useState } from 'react';\nimport Context from '../context/Context';\nimport Favorites from './ButtonFavorites';\nimport Share from './ButtonShare';\n\nconst copy = require('clipboard-copy');\n\nfunction DetailedComponent({ foodOrDrink, id }) {\n  const {\n    dataDetailed,\n    listOfIngredients,\n  } = useContext(Context);\n  const newData = dataDetailed[0];\n  const [isLinkCopied, setIsLinkCopied] = useState(false);\n\n  const handleClick = () => {\n    copy(window.location.href);\n    setIsLinkCopied(true);\n  };\n\n  return (\n    <div>\n      <div>\n        <img\n          data-testid=\"recipe-photo\"\n          src={ newData.strMealThumb || newData.strDrinkThumb }\n          alt=\"Imagem da receita pronta\"\n          width=\"200px\"\n        />\n        <div>\n          <h2 data-testid=\"recipe-title\">\n            { newData.strMeal || newData.strDrink }\n          </h2>\n          <button\n            type=\"button\"\n            data-testid=\"share-btn\"\n            onClick={ handleClick }\n          >\n            <Share\n              datatestid=\"img-share-btn\"\n              alt=\"Icone de compartilhamento\"\n            />\n          </button>\n          <Favorites\n            alt=\"Icone de favoritar\"\n            foodOrDrink={ foodOrDrink }\n            id={ id }\n          />\n        </div>\n        { isLinkCopied ? <p>Link copied!</p> : null }\n        <p data-testid=\"recipe-category\">\n          { foodOrDrink === 'foods' ? newData.strCategory : newData.strAlcoholic }\n        </p>\n\n        <div>\n          <h3>Ingredients</h3>\n          <ul>\n            {Object.values(listOfIngredients.ingredients).map((value, index) => (\n              <li\n                data-testid={ `${index}-ingredient-name-and-measure` }\n                key={ index }\n              >\n                {`${value} - ${Object.values(listOfIngredients.measure)[index]}`}\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div>\n          <h3>Instructions</h3>\n          <p data-testid=\"instructions\">\n            { newData.strInstructions }\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nDetailedComponent.propTypes = {\n  foodOrDrink: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default DetailedComponent;\n"]},"metadata":{},"sourceType":"module"}