{"ast":null,"code":"var _jsxFileName = \"/home/lorene/Trybe/MeusProjetosPessoais/appReceitas/src/pages/DoneRecipes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport shareIcon from '../images/shareIcon.svg';\nimport './DoneRecipes.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst copy = require('clipboard-copy');\n\nexport default function DoneRecipes() {\n  _s();\n\n  const getRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n  const [list, setList] = useState(getRecipes);\n\n  const filterByTypeRecipe = type => {\n    if (type === 'food') {\n      return setList(getRecipes.filter(data => data.type === 'food'));\n    }\n\n    if (type === 'drink') {\n      return setList(getRecipes.filter(data => data.type === 'drink'));\n    }\n\n    return setList(getRecipes);\n  };\n\n  const handleClick = _ref => {\n    let {\n      target\n    } = _ref;\n    copy(`http://localhost:3000${target.name}`);\n    target.nextSibling.innerHTML = 'Link copied!';\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Done Recipes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        \"data-testid\": \"filter-by-all-btn\",\n        onClick: () => {\n          filterByTypeRecipe('');\n        },\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        \"data-testid\": \"filter-by-food-btn\",\n        onClick: () => {\n          filterByTypeRecipe('food');\n        },\n        children: \"Food\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        \"data-testid\": \"filter-by-drink-btn\",\n        onClick: () => {\n          filterByTypeRecipe('drink');\n        },\n        children: \"Drinks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: list && list.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: item.type === 'food' ? `/foods/${item.id}` : `/drinks/${item.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"img-recipe\",\n            src: item.image,\n            \"data-testid\": `${index}-horizontal-image`,\n            alt: \"Foto da receita feita\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": `${index}-horizontal-top-text`,\n          children: item.type === 'food' ? `${item.nationality} - ${item.category}` : `${item.alcoholicOrNot}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: item.type === 'food' ? `/foods/${item.id}` : `/drinks/${item.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            \"data-testid\": `${index}-horizontal-name`,\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": `${index}-horizontal-done-date`,\n          children: [' ', item.doneDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), item.type === 'food' && item.tags ? item.tags.map((tag, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": `${index}-${item.tags[i]}-horizontal-tag`,\n          children: tag\n        }, tag, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this)) : '', /*#__PURE__*/_jsxDEV(\"input\", {\n          name: `/${item.type}s/${item.id}`,\n          type: \"image\",\n          src: shareIcon,\n          alt: \"\\xEDcone de compartilhamento\",\n          \"data-testid\": `${index}-horizontal-share-btn`,\n          onClick: handleClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": `${index}-Pasta-tag`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DoneRecipes, \"wgryr+mKu2ChMfjn7QBFHw41bH4=\");\n\n_c = DoneRecipes;\n\nvar _c;\n\n$RefreshReg$(_c, \"DoneRecipes\");","map":{"version":3,"sources":["/home/lorene/Trybe/MeusProjetosPessoais/appReceitas/src/pages/DoneRecipes.js"],"names":["React","useState","Link","Header","shareIcon","copy","require","DoneRecipes","getRecipes","JSON","parse","localStorage","getItem","list","setList","filterByTypeRecipe","type","filter","data","handleClick","target","name","nextSibling","innerHTML","map","item","index","id","image","nationality","category","alcoholicOrNot","doneDate","tags","tag","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAO,mBAAP;;;AAEA,MAAMC,IAAI,GAAGC,OAAO,CAAC,gBAAD,CAApB;;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AACpC,QAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAAnB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAACO,UAAD,CAAhC;;AAEA,QAAMO,kBAAkB,GAAIC,IAAD,IAAU;AACnC,QAAIA,IAAI,KAAK,MAAb,EAAqB;AACnB,aAAOF,OAAO,CAACN,UAAU,CAACS,MAAX,CAAmBC,IAAD,IAAUA,IAAI,CAACF,IAAL,KAAc,MAA1C,CAAD,CAAd;AACD;;AAAC,QAAIA,IAAI,KAAK,OAAb,EAAsB;AACtB,aAAOF,OAAO,CAACN,UAAU,CAACS,MAAX,CAAmBC,IAAD,IAAUA,IAAI,CAACF,IAAL,KAAc,OAA1C,CAAD,CAAd;AACD;;AAAC,WAAOF,OAAO,CAACN,UAAD,CAAd;AACH,GAND;;AAQA,QAAMW,WAAW,GAAG,QAAgB;AAAA,QAAf;AAAEC,MAAAA;AAAF,KAAe;AAClCf,IAAAA,IAAI,CAAE,wBAAuBe,MAAM,CAACC,IAAK,EAArC,CAAJ;AACAD,IAAAA,MAAM,CAACE,WAAP,CAAmBC,SAAnB,GAA+B,cAA/B;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,uBAAY,mBAFd;AAGE,QAAA,OAAO,EAAG,MAAM;AAAER,UAAAA,kBAAkB,CAAC,EAAD,CAAlB;AAAyB,SAH7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,uBAAY,oBAFd;AAGE,QAAA,OAAO,EAAG,MAAM;AAAEA,UAAAA,kBAAkB,CAAC,MAAD,CAAlB;AAA6B,SAHjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eAeE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,uBAAY,qBAFd;AAGE,QAAA,OAAO,EAAG,MAAM;AAAEA,UAAAA,kBAAkB,CAAC,OAAD,CAAlB;AAA8B,SAHlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAyBE;AAAA,gBACIF,IAAI,IAAIA,IAAI,CAACW,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,kBACjB;AAAA,gCACE,QAAC,IAAD;AACE,UAAA,EAAE,EAAGD,IAAI,CAACT,IAAL,KAAc,MAAd,GACA,UAASS,IAAI,CAACE,EAAG,EADjB,GACsB,WAAUF,IAAI,CAACE,EAAG,EAF/C;AAAA,iCAIE;AACE,YAAA,SAAS,EAAC,YADZ;AAEE,YAAA,GAAG,EAAGF,IAAI,CAACG,KAFb;AAGE,2BAAe,GAAEF,KAAM,mBAHzB;AAIE,YAAA,GAAG,EAAC;AAJN;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,gBADF,eAYE;AACE,yBAAe,GAAEA,KAAM,sBADzB;AAAA,oBAIID,IAAI,CAACT,IAAL,KAAc,MAAd,GACK,GAAES,IAAI,CAACI,WAAY,MAAKJ,IAAI,CAACK,QAAS,EAD3C,GACgD,GAAEL,IAAI,CAACM,cAAe;AAL1E;AAAA;AAAA;AAAA;AAAA,gBAZF,eAoBE,QAAC,IAAD;AACE,UAAA,EAAE,EAAGN,IAAI,CAACT,IAAL,KAAc,MAAd,GACA,UAASS,IAAI,CAACE,EAAG,EADjB,GACsB,WAAUF,IAAI,CAACE,EAAG,EAF/C;AAAA,iCAIE;AACE,2BAAe,GAAED,KAAM,kBADzB;AAAA,sBAGID,IAAI,CAACJ;AAHT;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,gBApBF,eA+BE;AAAG,yBAAe,GAAEK,KAAM,uBAA1B;AAAA,qBACG,GADH,EAEID,IAAI,CAACO,QAFT;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/BF,EAmCKP,IAAI,CAACT,IAAL,KAAc,MAAd,IAAwBS,IAAI,CAACQ,IAA9B,GACGR,IAAI,CAACQ,IAAL,CAAUT,GAAV,CAAc,CAACU,GAAD,EAAMC,CAAN,kBACf;AACE,yBAAe,GAAET,KAAM,IAAGD,IAAI,CAACQ,IAAL,CAAUE,CAAV,CAAa,iBADzC;AAAA,oBAIID;AAJJ,WAEQA,GAFR;AAAA;AAAA;AAAA;AAAA,gBADC,CADH,GASE,EA5CN,eA6CE;AACE,UAAA,IAAI,EAAI,IAAGT,IAAI,CAACT,IAAK,KAAIS,IAAI,CAACE,EAAG,EADnC;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,GAAG,EAAGvB,SAHR;AAIE,UAAA,GAAG,EAAC,8BAJN;AAKE,yBAAe,GAAEsB,KAAM,uBALzB;AAME,UAAA,OAAO,EAAGP;AANZ;AAAA;AAAA;AAAA;AAAA,gBA7CF,eAqDE;AAAA;AAAA;AAAA;AAAA,gBArDF,eAsDE;AACE,yBAAe,GAAEO,KAAM;AADzB;AAAA;AAAA;AAAA;AAAA,gBAtDF;AAAA,SAAWA,KAAX;AAAA;AAAA;AAAA;AAAA,cADQ;AADZ;AAAA;AAAA;AAAA;AAAA,YAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0FD;;GA3GuBnB,W;;KAAAA,W","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport shareIcon from '../images/shareIcon.svg';\nimport './DoneRecipes.css';\n\nconst copy = require('clipboard-copy');\n\nexport default function DoneRecipes() {\n  const getRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n  const [list, setList] = useState(getRecipes);\n\n  const filterByTypeRecipe = (type) => {\n    if (type === 'food') {\n      return setList(getRecipes.filter((data) => data.type === 'food'));\n    } if (type === 'drink') {\n      return setList(getRecipes.filter((data) => data.type === 'drink'));\n    } return setList(getRecipes);\n  };\n\n  const handleClick = ({ target }) => {\n    copy(`http://localhost:3000${target.name}`);\n    target.nextSibling.innerHTML = 'Link copied!';\n  };\n\n  return (\n    <div>\n      <Header title=\"Done Recipes\" />\n      <div>\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-all-btn\"\n          onClick={ () => { filterByTypeRecipe(''); } }\n        >\n          All\n        </button>\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-food-btn\"\n          onClick={ () => { filterByTypeRecipe('food'); } }\n        >\n          Food\n        </button>\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-drink-btn\"\n          onClick={ () => { filterByTypeRecipe('drink'); } }\n        >\n          Drinks\n        </button>\n      </div>\n      <div>\n        { list && list.map((item, index) => (\n          <div key={ index }>\n            <Link\n              to={ item.type === 'food'\n                ? `/foods/${item.id}` : `/drinks/${item.id}` }\n            >\n              <img\n                className=\"img-recipe\"\n                src={ item.image }\n                data-testid={ `${index}-horizontal-image` }\n                alt=\"Foto da receita feita\"\n              />\n            </Link>\n            <p\n              data-testid={ `${index}-horizontal-top-text` }\n            >\n              {\n                item.type === 'food'\n                  ? `${item.nationality} - ${item.category}` : `${item.alcoholicOrNot}`\n              }\n            </p>\n            <Link\n              to={ item.type === 'food'\n                ? `/foods/${item.id}` : `/drinks/${item.id}` }\n            >\n              <p\n                data-testid={ `${index}-horizontal-name` }\n              >\n                { item.name }\n\n              </p>\n            </Link>\n            <p data-testid={ `${index}-horizontal-done-date` }>\n              {' '}\n              { item.doneDate }\n            </p>\n            { (item.type === 'food' && item.tags)\n              ? (item.tags.map((tag, i) => (\n                <p\n                  data-testid={ `${index}-${item.tags[i]}-horizontal-tag` }\n                  key={ tag }\n                >\n                  { tag }\n                </p>\n              )))\n              : '' }\n            <input\n              name={ `/${item.type}s/${item.id}` }\n              type=\"image\"\n              src={ shareIcon }\n              alt=\"ícone de compartilhamento\"\n              data-testid={ `${index}-horizontal-share-btn` }\n              onClick={ handleClick }\n            />\n            <p />\n            <p\n              data-testid={ `${index}-Pasta-tag` }\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}