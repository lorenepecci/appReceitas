{"ast":null,"code":"var _jsxFileName = \"/home/lorene/Trybe/MeusProjetosPessoais/appReceitas/src/components/CardIngredients.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Context from '../context/Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CardIngredients(_ref) {\n  _s();\n\n  let {\n    index,\n    name,\n    isFood\n  } = _ref;\n  const history = useHistory();\n  const imgFood = `https://www.themealdb.com/images/ingredients/${name}-Small.png`;\n  const imgDrink = `https://www.thecocktaildb.com/images/ingredients/${name}-Small.png`;\n  const urlRecipes = `https://www.themealdb.com/api/json/v1/1/filter.php?i=${name}`;\n  const urlRecipesDrinks = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${name}`;\n  const {\n    setUrlForFetch\n  } = useContext(Context);\n  const {\n    setIsFromIngredientsExplore\n  } = useContext(Context);\n\n  const img = () => {\n    if (isFood) {\n      return imgFood;\n    }\n\n    return imgDrink;\n  };\n\n  const onHandleClick = () => {\n    setIsFromIngredientsExplore(true);\n\n    if (isFood) {\n      setUrlForFetch(urlRecipes);\n      history.push('/foods');\n    } else {\n      setUrlForFetch(urlRecipesDrinks);\n      history.push('/drinks');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      \"data-testid\": `${index}-card-name`,\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      \"data-testid\": `${index}-ingredient-card`,\n      onClick: onHandleClick,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        \"data-testid\": `${index}-card-img`,\n        src: img(),\n        alt: \"cardIngredient\",\n        width: \"50px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CardIngredients, \"jrc2/24bMX1gQEKoYTx+yHnsi0U=\", false, function () {\n  return [useHistory];\n});\n\n_c = CardIngredients;\nCardIngredients.propTypes = {\n  name: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  isFood: PropTypes.bool.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"CardIngredients\");","map":{"version":3,"sources":["/home/lorene/Trybe/MeusProjetosPessoais/appReceitas/src/components/CardIngredients.js"],"names":["PropTypes","React","useContext","useHistory","Context","CardIngredients","index","name","isFood","history","imgFood","imgDrink","urlRecipes","urlRecipesDrinks","setUrlForFetch","setIsFromIngredientsExplore","img","onHandleClick","push","propTypes","string","isRequired","number","bool"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,eAAe,SAASC,eAAT,OAAkD;AAAA;;AAAA,MAAzB;AAAEC,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA;AAAf,GAAyB;AAC/D,QAAMC,OAAO,GAAGN,UAAU,EAA1B;AACA,QAAMO,OAAO,GAAI,gDAA+CH,IAAK,YAArE;AACA,QAAMI,QAAQ,GAAI,oDAAmDJ,IAAK,YAA1E;AACA,QAAMK,UAAU,GAAI,wDAAuDL,IAAK,EAAhF;AACA,QAAMM,gBAAgB,GAAI,4DAA2DN,IAAK,EAA1F;AAEA,QAAM;AAAEO,IAAAA;AAAF,MAAqBZ,UAAU,CAACE,OAAD,CAArC;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAkCb,UAAU,CAACE,OAAD,CAAlD;;AAEA,QAAMY,GAAG,GAAG,MAAM;AAChB,QAAIR,MAAJ,EAAY;AACV,aAAOE,OAAP;AACD;;AACD,WAAOC,QAAP;AACD,GALD;;AAOA,QAAMM,aAAa,GAAG,MAAM;AAC1BF,IAAAA,2BAA2B,CAAC,IAAD,CAA3B;;AACA,QAAIP,MAAJ,EAAY;AACVM,MAAAA,cAAc,CAACF,UAAD,CAAd;AACAH,MAAAA,OAAO,CAACS,IAAR,CAAa,QAAb;AACD,KAHD,MAGO;AACLJ,MAAAA,cAAc,CAACD,gBAAD,CAAd;AACAJ,MAAAA,OAAO,CAACS,IAAR,CAAa,SAAb;AACD;AACF,GATD;;AAUA,sBACE;AAAA,4BACE;AAAI,qBAAe,GAAEZ,KAAM,YAA3B;AAAA,gBAA2CC;AAA3C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,qBAAe,GAAED,KAAM,kBAFzB;AAGE,MAAA,OAAO,EAAGW,aAHZ;AAAA,6BAKE;AACE,uBAAe,GAAEX,KAAM,WADzB;AAEE,QAAA,GAAG,EAAGU,GAAG,EAFX;AAGE,QAAA,GAAG,EAAC,gBAHN;AAIE,QAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GA5CuBX,e;UACNF,U;;;KADME,e;AA8CxBA,eAAe,CAACc,SAAhB,GAA4B;AAC1BZ,EAAAA,IAAI,EAAEP,SAAS,CAACoB,MAAV,CAAiBC,UADG;AAE1Bf,EAAAA,KAAK,EAAEN,SAAS,CAACsB,MAAV,CAAiBD,UAFE;AAG1Bb,EAAAA,MAAM,EAAER,SAAS,CAACuB,IAAV,CAAeF;AAHG,CAA5B","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Context from '../context/Context';\n\nexport default function CardIngredients({ index, name, isFood }) {\n  const history = useHistory();\n  const imgFood = `https://www.themealdb.com/images/ingredients/${name}-Small.png`;\n  const imgDrink = `https://www.thecocktaildb.com/images/ingredients/${name}-Small.png`;\n  const urlRecipes = `https://www.themealdb.com/api/json/v1/1/filter.php?i=${name}`;\n  const urlRecipesDrinks = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${name}`;\n\n  const { setUrlForFetch } = useContext(Context);\n  const { setIsFromIngredientsExplore } = useContext(Context);\n\n  const img = () => {\n    if (isFood) {\n      return imgFood;\n    }\n    return imgDrink;\n  };\n\n  const onHandleClick = () => {\n    setIsFromIngredientsExplore(true);\n    if (isFood) {\n      setUrlForFetch(urlRecipes);\n      history.push('/foods');\n    } else {\n      setUrlForFetch(urlRecipesDrinks);\n      history.push('/drinks');\n    }\n  };\n  return (\n    <div>\n      <h1 data-testid={ `${index}-card-name` }>{ name }</h1>\n      <button\n        type=\"button\"\n        data-testid={ `${index}-ingredient-card` }\n        onClick={ onHandleClick }\n      >\n        <img\n          data-testid={ `${index}-card-img` }\n          src={ img() }\n          alt=\"cardIngredient\"\n          width=\"50px\"\n        />\n      </button>\n    </div>\n  );\n}\n\nCardIngredients.propTypes = {\n  name: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  isFood: PropTypes.bool.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}