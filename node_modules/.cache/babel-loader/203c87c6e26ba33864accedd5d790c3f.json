{"ast":null,"code":"var _jsxFileName = \"/home/lorene/Trybe/MeusProjetosPessoais/appReceitas/src/components/ButtonFavorites.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport React, { useContext, useEffect, useState } from 'react';\nimport Context from '../context/Context';\nimport setLocalStorage from '../helpers/createLocalStorage';\nimport getlocalStorage from '../helpers/getLocalStore';\nimport SaveFavorites from '../helpers/SaveFavorites';\nimport { verifyFavorites } from '../helpers/VerifyLocalStorage';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport WhiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Favorites(_ref) {\n  _s();\n\n  let {\n    alt,\n    foodOrDrink,\n    id\n  } = _ref;\n  const {\n    dataDetailed,\n    setfavorite,\n    favorites,\n    setList,\n    FavoriteList\n  } = useContext(Context);\n  const idDetails = id;\n  const [isFavorite, setFavorite] = useState(verifyFavorites(idDetails));\n\n  const handleClick = () => {\n    const currentFavorites = getlocalStorage('favoriteRecipes');\n\n    if (verifyFavorites(idDetails)) {\n      const removeFavorite = currentFavorites.filter(item => item.id !== idDetails);\n      setLocalStorage('favoriteRecipes', removeFavorite);\n      setList(removeFavorite);\n      setFavorite(verifyFavorites(idDetails));\n    } else if (!currentFavorites) {\n      setLocalStorage('favoriteRecipes', [favorites]);\n      setList([favorites]);\n      setFavorite(verifyFavorites(idDetails));\n    } else {\n      setList(prevState => [...prevState, favorites]);\n      setFavorite(verifyFavorites(idDetails));\n    }\n  };\n\n  setLocalStorage('favoriteRecipes', FavoriteList);\n  useEffect(() => {\n    const newData = dataDetailed[0];\n    setFavorite(verifyFavorites(idDetails));\n    setfavorite(SaveFavorites(newData, foodOrDrink));\n  }, [FavoriteList, dataDetailed, foodOrDrink, idDetails, setfavorite]);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    onClick: handleClick,\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      \"data-testid\": \"favorite-btn\",\n      src: isFavorite ? blackHeartIcon : WhiteHeartIcon,\n      alt: alt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Favorites, \"cI95xDdoPUj08YYKTNkwKwsUvNM=\");\n\n_c = Favorites;\nFavorites.propTypes = {\n  alt: PropTypes.string.isRequired,\n  foodOrDrink: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Favorites\");","map":{"version":3,"sources":["/home/lorene/Trybe/MeusProjetosPessoais/appReceitas/src/components/ButtonFavorites.js"],"names":["PropTypes","React","useContext","useEffect","useState","Context","setLocalStorage","getlocalStorage","SaveFavorites","verifyFavorites","blackHeartIcon","WhiteHeartIcon","Favorites","alt","foodOrDrink","id","dataDetailed","setfavorite","favorites","setList","FavoriteList","idDetails","isFavorite","setFavorite","handleClick","currentFavorites","removeFavorite","filter","item","prevState","newData","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { useContext, useEffect, useState } from 'react';\nimport Context from '../context/Context';\nimport setLocalStorage from '../helpers/createLocalStorage';\nimport getlocalStorage from '../helpers/getLocalStore';\nimport SaveFavorites from '../helpers/SaveFavorites';\nimport { verifyFavorites } from '../helpers/VerifyLocalStorage';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport WhiteHeartIcon from '../images/whiteHeartIcon.svg';\n\nexport default function Favorites({ alt, foodOrDrink, id }) {\n  const { dataDetailed,\n    setfavorite,\n    favorites,\n    setList,\n    FavoriteList,\n  } = useContext(Context);\n  const idDetails = id;\n  const [isFavorite, setFavorite] = useState(verifyFavorites(idDetails));\n\n  const handleClick = () => {\n    const currentFavorites = getlocalStorage('favoriteRecipes');\n    if (verifyFavorites(idDetails)) {\n      const removeFavorite = currentFavorites.filter((item) => item.id !== idDetails);\n      setLocalStorage('favoriteRecipes', removeFavorite);\n      setList(removeFavorite);\n      setFavorite(verifyFavorites(idDetails));\n    } else if (!currentFavorites) {\n      setLocalStorage('favoriteRecipes', [favorites]);\n      setList([favorites]);\n      setFavorite(verifyFavorites(idDetails));\n    } else {\n      setList((prevState) => [...prevState, favorites]);\n      setFavorite(verifyFavorites(idDetails));\n    }\n  };\n  setLocalStorage('favoriteRecipes', FavoriteList);\n\n  useEffect(() => {\n    const newData = dataDetailed[0];\n    setFavorite(verifyFavorites(idDetails));\n    setfavorite(SaveFavorites(newData, foodOrDrink));\n  }, [FavoriteList, dataDetailed, foodOrDrink, idDetails, setfavorite]);\n  return (\n    <button\n      type=\"button\"\n      onClick={ handleClick }\n    >\n      <img\n        data-testid=\"favorite-btn\"\n        src={ isFavorite ? blackHeartIcon : WhiteHeartIcon }\n        alt={ alt }\n      />\n    </button>\n  );\n}\n\nFavorites.propTypes = {\n  alt: PropTypes.string.isRequired,\n  foodOrDrink: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}