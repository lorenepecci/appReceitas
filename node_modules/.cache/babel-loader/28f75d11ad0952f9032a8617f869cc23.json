{"ast":null,"code":"var _jsxFileName = \"/home/lorene/Trybe/MeusProjetosPessoais/appReceitas/src/components/SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport React, { useContext, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Context from '../context/Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchBar(_ref) {\n  _s();\n\n  let {\n    foodOrDrink\n  } = _ref;\n  const history = useHistory();\n  const [searchState, setSearchState] = useState({\n    searchInput: '',\n    ingredient: false,\n    name: false,\n    firstLetter: false\n  });\n  const {\n    setFoodCards\n  } = useContext(Context);\n  const {\n    setDrinkCards\n  } = useContext(Context);\n\n  const onInputChange = _ref2 => {\n    let {\n      target\n    } = _ref2;\n    const {\n      name,\n      value\n    } = target;\n    setSearchState(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  };\n\n  const foodTypeUrlFetch = () => {\n    switch (searchState.option) {\n      case 'ingredient':\n        return `https://www.themealdb.com/api/json/v1/1/filter.php?i=${searchState.searchInput}`;\n\n      case 'name':\n        return `https://www.themealdb.com/api/json/v1/1/search.php?s=${searchState.searchInput}`;\n\n      case 'firstLetter':\n        if (searchState.searchInput.length > 1) {\n          global.alert('Your search must have only 1 (one) character');\n        }\n\n        return `https://www.themealdb.com/api/json/v1/1/search.php?f=${searchState.searchInput}`;\n\n      default:\n        return '';\n    }\n  };\n\n  const drinkTypeUrlFetch = () => {\n    switch (searchState.option) {\n      case 'ingredient':\n        return `https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${searchState.searchInput}`;\n\n      case 'name':\n        return `https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${searchState.searchInput}`;\n\n      case 'firstLetter':\n        if (searchState.searchInput.length > 1) {\n          global.alert('Your search must have only 1 (one) character');\n        }\n\n        return `https://www.thecocktaildb.com/api/json/v1/1/search.php?f=${searchState.searchInput}`;\n\n      default:\n        return '';\n    }\n  };\n\n  const onClick = async () => {\n    let response;\n\n    if (foodOrDrink === 'food') {\n      response = await fetch(foodTypeUrlFetch());\n    }\n\n    if (foodOrDrink === 'drink') {\n      response = await fetch(drinkTypeUrlFetch());\n    }\n\n    const data = await response.json();\n    const magicTwelve = 12;\n\n    if (data.meals) {\n      if (data.meals.length === 1) {\n        history.push(`/foods/${data.meals[0].idMeal}`);\n      } else {\n        setFoodCards(data.meals.filter((_i, index) => index < magicTwelve));\n      }\n    } else if (data.drinks) {\n      if (data.drinks.length === 1) {\n        history.push(`/drinks/${data.drinks[0].idDrink}`);\n      } else {\n        setDrinkCards(data.drinks.filter((_i, index) => index < magicTwelve));\n      }\n    } else {\n      global.alert('Sorry, we haven\\'t found any recipes for these filters.');\n      setFoodCards(false);\n      setDrinkCards(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"SearchBar\", /*#__PURE__*/_jsxDEV(\"input\", {\n      \"data-testid\": \"search-input\",\n      type: \"text\",\n      placeholder: \"Search Recipe\",\n      name: \"searchInput\",\n      value: searchState.searchInput,\n      onChange: onInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"Ingredient\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        \"data-testid\": \"ingredient-search-radio\",\n        type: \"radio\",\n        id: \"Ingredient\",\n        name: \"option\",\n        value: \"ingredient\",\n        onChange: onInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), \"Ingredient\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"Name\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        \"data-testid\": \"name-search-radio\",\n        type: \"radio\",\n        id: \"Name\",\n        name: \"option\",\n        value: \"name\",\n        onChange: onInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), \"Name\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"firstLetter\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        \"data-testid\": \"first-letter-search-radio\",\n        type: \"radio\",\n        id: \"firstLetter\",\n        value: \"firstLetter\",\n        name: \"option\",\n        onChange: onInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), \"First Letter\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      \"data-testid\": \"exec-search-btn\",\n      type: \"button\",\n      onClick: onClick,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchBar, \"x6UPx+wq87sT+A/RP5UbLazr830=\", false, function () {\n  return [useHistory];\n});\n\n_c = SearchBar;\nSearchBar.propTypes = {\n  foodOrDrink: PropTypes.string.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/home/lorene/Trybe/MeusProjetosPessoais/appReceitas/src/components/SearchBar.js"],"names":["PropTypes","React","useContext","useState","useHistory","Context","SearchBar","foodOrDrink","history","searchState","setSearchState","searchInput","ingredient","name","firstLetter","setFoodCards","setDrinkCards","onInputChange","target","value","prevState","foodTypeUrlFetch","option","length","global","alert","drinkTypeUrlFetch","onClick","response","fetch","data","json","magicTwelve","meals","push","idMeal","filter","_i","index","drinks","idDrink","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { useContext, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Context from '../context/Context';\n\nexport default function SearchBar({ foodOrDrink }) {\n  const history = useHistory();\n  const [searchState, setSearchState] = useState({\n    searchInput: '',\n    ingredient: false,\n    name: false,\n    firstLetter: false,\n  });\n  const { setFoodCards } = useContext(Context);\n  const { setDrinkCards } = useContext(Context);\n\n  const onInputChange = ({ target }) => {\n    const { name, value } = target;\n    setSearchState((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const foodTypeUrlFetch = () => {\n    switch (searchState.option) {\n    case 'ingredient':\n      return `https://www.themealdb.com/api/json/v1/1/filter.php?i=${searchState.searchInput}`;\n    case 'name':\n      return `https://www.themealdb.com/api/json/v1/1/search.php?s=${searchState.searchInput}`;\n    case 'firstLetter':\n      if (searchState.searchInput.length > 1) {\n        global.alert('Your search must have only 1 (one) character');\n      }\n      return `https://www.themealdb.com/api/json/v1/1/search.php?f=${searchState.searchInput}`;\n    default:\n      return '';\n    }\n  };\n\n  const drinkTypeUrlFetch = () => {\n    switch (searchState.option) {\n    case 'ingredient':\n      return `https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${searchState.searchInput}`;\n    case 'name':\n      return `https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${searchState.searchInput}`;\n    case 'firstLetter':\n      if (searchState.searchInput.length > 1) {\n        global.alert('Your search must have only 1 (one) character');\n      }\n      return `https://www.thecocktaildb.com/api/json/v1/1/search.php?f=${searchState.searchInput}`;\n    default:\n      return '';\n    }\n  };\n\n  const onClick = async () => {\n    let response;\n    if (foodOrDrink === 'food') {\n      response = await fetch(foodTypeUrlFetch());\n    }\n    if (foodOrDrink === 'drink') {\n      response = await fetch(drinkTypeUrlFetch());\n    }\n    const data = await response.json();\n    const magicTwelve = 12;\n    if (data.meals) {\n      if (data.meals.length === 1) {\n        history.push(`/foods/${data.meals[0].idMeal}`);\n      } else {\n        setFoodCards(data.meals.filter((_i, index) => index < magicTwelve));\n      }\n    } else if (data.drinks) {\n      if (data.drinks.length === 1) {\n        history.push(`/drinks/${data.drinks[0].idDrink}`);\n      } else {\n        setDrinkCards(data.drinks.filter((_i, index) => index < magicTwelve));\n      }\n    } else {\n      global.alert('Sorry, we haven\\'t found any recipes for these filters.');\n      setFoodCards(false);\n      setDrinkCards(false);\n    }\n  };\n\n  return (\n    <div>\n      SearchBar\n\n      <input\n        data-testid=\"search-input\"\n        type=\"text\"\n        placeholder=\"Search Recipe\"\n        name=\"searchInput\"\n        value={ searchState.searchInput }\n        onChange={ onInputChange }\n      />\n\n      <label htmlFor=\"Ingredient\">\n        <input\n          data-testid=\"ingredient-search-radio\"\n          type=\"radio\"\n          id=\"Ingredient\"\n          name=\"option\"\n          value=\"ingredient\"\n          onChange={ onInputChange }\n        />\n        Ingredient\n      </label>\n      <label htmlFor=\"Name\">\n        <input\n          data-testid=\"name-search-radio\"\n          type=\"radio\"\n          id=\"Name\"\n          name=\"option\"\n          value=\"name\"\n          onChange={ onInputChange }\n        />\n        Name\n      </label>\n      <label htmlFor=\"firstLetter\">\n        <input\n          data-testid=\"first-letter-search-radio\"\n          type=\"radio\"\n          id=\"firstLetter\"\n          value=\"firstLetter\"\n          name=\"option\"\n          onChange={ onInputChange }\n        />\n        First Letter\n      </label>\n      <button\n        data-testid=\"exec-search-btn\"\n        type=\"button\"\n        onClick={ onClick }\n      >\n        Search\n      </button>\n\n    </div>\n  );\n}\n\nSearchBar.propTypes = {\n  foodOrDrink: PropTypes.string.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}