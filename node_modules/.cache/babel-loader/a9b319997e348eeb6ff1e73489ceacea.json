{"ast":null,"code":"var _jsxFileName = \"/home/lorene/Trybe/MeusProjetosPessoais/appReceitas/src/components/HomePage.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport PropTypes from 'prop-types';\nimport React, { useContext, useEffect, useState } from 'react';\nimport Context from '../context/Context';\nimport MapCards from './MapCards';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HomePage(_ref) {\n  _s();\n\n  let {\n    foodOrDrink\n  } = _ref;\n  const {\n    foodCards,\n    setFoodCards\n  } = useContext(Context);\n  const {\n    drinkCards,\n    setDrinkCards\n  } = useContext(Context);\n  const {\n    urlForFetch,\n    setUrlForFetch\n  } = useContext(Context);\n  const [listCategories, setListCategories] = useState([{\n    strCategory: 'All'\n  }]);\n  const [previousCategorie, setPreviousCategorie] = useState('All');\n  const {\n    isFromIngredientsExplore\n  } = useContext(Context);\n  const URLCategoriesFood = 'https://www.themealdb.com/api/json/v1/1/list.php?c=list';\n  const URLCategoriesDrink = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list';\n  const URLstartFood = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n  const URLstartDrink = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n  const magicSix = 6;\n  const magicTwelve = 12;\n\n  const URLCategories = () => {\n    if (foodOrDrink === 'food') return URLCategoriesFood;\n    if (foodOrDrink === 'drink') return URLCategoriesDrink;\n  };\n\n  const URLstart = () => {\n    if (foodOrDrink === 'food') return URLstartFood;\n    if (foodOrDrink === 'drink') return URLstartDrink;\n  };\n\n  const savelist = data => {\n    if (foodOrDrink === 'drink') {\n      setDrinkCards(data.drinks.filter((_i, index) => index < magicTwelve));\n      setFoodCards([]);\n    }\n\n    if (foodOrDrink === 'food') {\n      setFoodCards(data.meals.filter((_i, index) => index < magicTwelve));\n      setDrinkCards([]);\n    }\n  };\n\n  const setCardsForType = data => {\n    if (foodOrDrink === 'food') {\n      return savelist(data);\n    }\n\n    if (foodOrDrink === 'drink') {\n      return savelist(data);\n    }\n  };\n\n  const setListCategoriesForType = categories => {\n    if (foodOrDrink === 'food') {\n      return setListCategories(prev => [...prev, ...categories.meals]);\n    }\n\n    if (foodOrDrink === 'drink') {\n      return setListCategories(prev => [...prev, ...categories.drinks]);\n    }\n  };\n\n  const apiCategories = async () => {\n    try {\n      const response = await fetch(URLCategories());\n      const categories = await response.json();\n      setListCategoriesForType(categories);\n    } catch (error) {\n      return error;\n    }\n  };\n\n  const fetchByFilters = async url => {\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      setCardsForType(data);\n    } catch (error) {\n      return error;\n    }\n  };\n\n  useEffect(() => {\n    if (isFromIngredientsExplore) {\n      setUrlForFetch(urlForFetch);\n    } else {\n      setUrlForFetch(URLstart);\n    }\n\n    apiCategories();\n  }, []);\n  useEffect(() => {\n    fetchByFilters(urlForFetch);\n  }, [urlForFetch]);\n\n  const onChangeCardsForCategory = category => {\n    if (category === 'All') {\n      setUrlForFetch(URLstart);\n    } else if (foodOrDrink === 'food') {\n      setUrlForFetch(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${category}`);\n    } else if (foodOrDrink === 'drink') {\n      setUrlForFetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${category}`);\n    }\n  };\n\n  const onClickButtonCategorie = category => {\n    if (category !== previousCategorie) {\n      onChangeCardsForCategory(category);\n    } else {\n      onChangeCardsForCategory('All');\n    }\n\n    setPreviousCategorie(category);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-header\",\n      children: listCategories.length && listCategories.filter((_, index) => index < magicSix).map((category, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        \"data-testid\": `${category.strCategory}-category-filter`,\n        onClick: () => onClickButtonCategorie(category.strCategory),\n        children: category.strCategory\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"homepage\",\n      children: [foodCards.length && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mapcards\",\n        children: /*#__PURE__*/_jsxDEV(MapCards, {\n          list: foodCards,\n          foodOrDrink: foodOrDrink\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), drinkCards.length && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mapcards\",\n        children: /*#__PURE__*/_jsxDEV(MapCards, {\n          list: drinkCards,\n          foodOrDrink: foodOrDrink\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HomePage, \"uo6/jExsT1RmoxCyo8dH/f68E5g=\");\n\n_c = HomePage;\nHomePage.propTypes = {\n  foodOrDrink: PropTypes.string.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/home/lorene/Trybe/MeusProjetosPessoais/appReceitas/src/components/HomePage.js"],"names":["PropTypes","React","useContext","useEffect","useState","Context","MapCards","HomePage","foodOrDrink","foodCards","setFoodCards","drinkCards","setDrinkCards","urlForFetch","setUrlForFetch","listCategories","setListCategories","strCategory","previousCategorie","setPreviousCategorie","isFromIngredientsExplore","URLCategoriesFood","URLCategoriesDrink","URLstartFood","URLstartDrink","magicSix","magicTwelve","URLCategories","URLstart","savelist","data","drinks","filter","_i","index","meals","setCardsForType","setListCategoriesForType","categories","prev","apiCategories","response","fetch","json","error","fetchByFilters","url","onChangeCardsForCategory","category","onClickButtonCategorie","length","_","map","i","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport PropTypes from 'prop-types';\nimport React, { useContext, useEffect, useState } from 'react';\nimport Context from '../context/Context';\nimport MapCards from './MapCards';\n\nexport default function HomePage({ foodOrDrink }) {\n  const { foodCards, setFoodCards } = useContext(Context);\n  const { drinkCards, setDrinkCards } = useContext(Context);\n  const { urlForFetch, setUrlForFetch } = useContext(Context);\n  const [listCategories, setListCategories] = useState([{ strCategory: 'All' }]);\n  const [previousCategorie, setPreviousCategorie] = useState('All');\n  const { isFromIngredientsExplore } = useContext(Context);\n\n  const URLCategoriesFood = 'https://www.themealdb.com/api/json/v1/1/list.php?c=list';\n  const URLCategoriesDrink = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list';\n  const URLstartFood = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n  const URLstartDrink = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n\n  const magicSix = 6;\n  const magicTwelve = 12;\n\n  const URLCategories = () => {\n    if (foodOrDrink === 'food') return URLCategoriesFood;\n    if (foodOrDrink === 'drink') return URLCategoriesDrink;\n  };\n\n  const URLstart = () => {\n    if (foodOrDrink === 'food') return URLstartFood;\n    if (foodOrDrink === 'drink') return URLstartDrink;\n  };\n\n  const savelist = (data) => {\n    if (foodOrDrink === 'drink') {\n      setDrinkCards(data.drinks\n        .filter((_i, index) => index < magicTwelve));\n      setFoodCards([]);\n    }\n    if (foodOrDrink === 'food') {\n      setFoodCards(data.meals\n        .filter((_i, index) => index < magicTwelve));\n      setDrinkCards([]);\n    }\n  };\n\n  const setCardsForType = (data) => {\n    if (foodOrDrink === 'food') {\n      return savelist(data);\n    }\n    if (foodOrDrink === 'drink') {\n      return savelist(data);\n    }\n  };\n\n  const setListCategoriesForType = (categories) => {\n    if (foodOrDrink === 'food') {\n      return setListCategories((prev) => ([...prev, ...categories.meals]));\n    }\n    if (foodOrDrink === 'drink') {\n      return setListCategories((prev) => ([...prev, ...categories.drinks]));\n    }\n  };\n\n  const apiCategories = async () => {\n    try {\n      const response = await fetch(URLCategories());\n      const categories = await response.json();\n      setListCategoriesForType(categories);\n    } catch (error) {\n      return error;\n    }\n  };\n\n  const fetchByFilters = async (url) => {\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      setCardsForType(data);\n    } catch (error) {\n      return error;\n    }\n  };\n\n  useEffect(() => {\n    if (isFromIngredientsExplore) {\n      setUrlForFetch(urlForFetch);\n    } else {\n      setUrlForFetch(URLstart);\n    } apiCategories();\n  }, []);\n  useEffect(() => { fetchByFilters(urlForFetch); }, [urlForFetch]);\n\n  const onChangeCardsForCategory = (category) => {\n    if (category === 'All') {\n      setUrlForFetch(URLstart);\n    } else if (foodOrDrink === 'food') {\n      setUrlForFetch(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${category}`);\n    } else if (foodOrDrink === 'drink') {\n      setUrlForFetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${category}`);\n    }\n  };\n\n  const onClickButtonCategorie = (category) => {\n    if (category !== previousCategorie) {\n      onChangeCardsForCategory(category);\n    } else {\n      onChangeCardsForCategory('All');\n    }\n    setPreviousCategorie(category);\n  };\n\n  return (\n    <div>\n      <div className=\"container-header\">\n        { listCategories.length\n            && listCategories.filter((_, index) => index < magicSix)\n              .map((category, i) => (\n                <button\n                  key={ i }\n                  type=\"button\"\n                  data-testid={ `${category.strCategory}-category-filter` }\n                  onClick={ () => onClickButtonCategorie(category.strCategory) }\n                >\n                  {category.strCategory}\n                </button>\n              ))}\n      </div>\n      <div className=\"homepage\">\n        { foodCards.length && (\n          <div className='mapcards'>\n            <MapCards list={ foodCards } foodOrDrink={ foodOrDrink } />\n          </div>\n      ) }\n        { drinkCards.length && (\n          <div className='mapcards'>\n            <MapCards list={ drinkCards } foodOrDrink={ foodOrDrink } />\n            </div>\n        ) }\n      </div>\n    </div>\n  );\n}\n\nHomePage.propTypes = {\n  foodOrDrink: PropTypes.string.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}