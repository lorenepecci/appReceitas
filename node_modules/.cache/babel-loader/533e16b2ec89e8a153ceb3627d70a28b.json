{"ast":null,"code":"var _jsxFileName = \"/home/lorene/Trybe/MeusProjetosPessoais/appReceitas/src/pages/NationalFoods.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from 'react';\nimport FooterPages from '../components/FooterPages';\nimport Header from '../components/Header';\nimport MapCards from '../components/MapCards';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NationalFoods() {\n  _s();\n\n  const magicTwelve = 12;\n  const [state, setState] = useState('All');\n  const [recipesList, setRecipes] = useState([]);\n  const [listNationality, setListNationality] = useState([{\n    strArea: 'All'\n  }]);\n  const urlNationalities = 'https://www.themealdb.com/api/json/v1/1/list.php?a=list';\n  const URLstartFood = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n  const urlState = `https://www.themealdb.com/api/json/v1/1/filter.php?a=${state}`;\n\n  const onInputChange = _ref => {\n    let {\n      target\n    } = _ref;\n    setState(target.value);\n  };\n\n  useEffect(() => {\n    const FetchListNationality = async () => {\n      const response = await fetch(urlNationalities);\n      const data = await response.json();\n      setListNationality(prev => prev.concat(data.meals));\n    };\n\n    FetchListNationality();\n  }, []);\n\n  const FetchRecipesNationality = async url => {\n    const response = await fetch(url);\n    const data = await response.json();\n    setRecipes(data.meals.filter((_i, index) => index < magicTwelve));\n  };\n\n  useEffect(() => {\n    if (state === 'All') {\n      FetchRecipesNationality(URLstartFood);\n    } else {\n      FetchRecipesNationality(urlState);\n    }\n  }, [state]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Explore Nationalities\",\n      showSearchIcon: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      \"data-testid\": \"explore-by-nationality-dropdown\",\n      name: \"nationality\",\n      onChange: onInputChange,\n      children: listNationality.map((nationality, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        \"data-testid\": `${nationality.strArea}-option`,\n        value: nationality.strArea,\n        children: nationality.strArea\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), recipesList.length && /*#__PURE__*/_jsxDEV(MapCards, {\n      list: recipesList,\n      foodOrDrink: \"food\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FooterPages, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NationalFoods, \"GBxsWz3Oi7geW7gTvwZNcxiEZVk=\");\n\n_c = NationalFoods;\n\nvar _c;\n\n$RefreshReg$(_c, \"NationalFoods\");","map":{"version":3,"sources":["/home/lorene/Trybe/MeusProjetosPessoais/appReceitas/src/pages/NationalFoods.js"],"names":["React","useEffect","useState","FooterPages","Header","MapCards","NationalFoods","magicTwelve","state","setState","recipesList","setRecipes","listNationality","setListNationality","strArea","urlNationalities","URLstartFood","urlState","onInputChange","target","value","FetchListNationality","response","fetch","data","json","prev","concat","meals","FetchRecipesNationality","url","filter","_i","index","map","nationality","length"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from 'react';\nimport FooterPages from '../components/FooterPages';\nimport Header from '../components/Header';\nimport MapCards from '../components/MapCards';\n\nexport default function NationalFoods() {\n  const magicTwelve = 12;\n  const [state, setState] = useState('All');\n  const [recipesList, setRecipes] = useState([]);\n  const [listNationality, setListNationality] = useState([{\n    strArea: 'All',\n  }]);\n  const urlNationalities = 'https://www.themealdb.com/api/json/v1/1/list.php?a=list';\n  const URLstartFood = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n  const urlState = `https://www.themealdb.com/api/json/v1/1/filter.php?a=${state}`;\n\n  const onInputChange = ({ target }) => {\n    setState(target.value);\n  };\n\n  useEffect(() => {\n    const FetchListNationality = async () => {\n      const response = await fetch(urlNationalities);\n      const data = await response.json();\n      setListNationality((prev) => prev.concat(data.meals));\n    };\n    FetchListNationality();\n  }, []);\n\n  const FetchRecipesNationality = async (url) => {\n    const response = await fetch(url);\n    const data = await response.json();\n    setRecipes(data.meals\n      .filter((_i, index) => index < magicTwelve));\n  };\n\n  useEffect(() => {\n    if (state === 'All') {\n      FetchRecipesNationality(URLstartFood);\n    } else {\n      FetchRecipesNationality(urlState);\n    }\n  }, [state]);\n\n  return (\n    <div>\n      <Header title=\"Explore Nationalities\" showSearchIcon />\n      <select\n        data-testid=\"explore-by-nationality-dropdown\"\n        name=\"nationality\"\n        onChange={ onInputChange }\n      >\n        { listNationality.map((nationality, index) => (\n          <option\n            key={ index }\n            data-testid={ `${nationality.strArea}-option` }\n            value={ nationality.strArea }\n          >\n            { nationality.strArea }\n          </option>\n        ))}\n      </select>\n\n      { recipesList.length && (\n        <MapCards list={ recipesList } foodOrDrink=\"food\" />\n      ) }\n      <FooterPages />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}