{"ast":null,"code":"var _jsxFileName = \"/home/lorene/Trybe/MeusProjetosPessoais/appReceitas/src/components/FavoriteRecipesButton.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport React, { useState, useEffect, useContext } from 'react';\nimport WhiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport { verifyFavorites } from '../helpers/VerifyLocalStorage';\nimport setLocalStorage from '../helpers/createLocalStorage';\nimport Context from '../context/Context';\nimport getlocalStorage from '../helpers/getLocalStore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FavoriteRecipesButton(_ref) {\n  _s();\n\n  let {\n    datatestid,\n    alt,\n    id,\n    obj\n  } = _ref;\n  const {\n    FavoriteList,\n    setList\n  } = useContext(Context);\n  const [isFavorite, setFavorite] = useState(verifyFavorites(id));\n\n  const handleClick = () => {\n    const currentFavorites = getlocalStorage('favoriteRecipes');\n\n    if (verifyFavorites(id)) {\n      const removeFavorite = currentFavorites.filter(item => item.id !== id);\n      setLocalStorage('favoriteRecipes', removeFavorite);\n      setList(removeFavorite);\n    } else {\n      setList(prevState => [...prevState, obj]);\n    }\n  };\n\n  setLocalStorage('favoriteRecipes', FavoriteList);\n  useEffect(() => setFavorite(verifyFavorites(id)));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleClick,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        \"data-testid\": datatestid,\n        src: isFavorite ? blackHeartIcon : WhiteHeartIcon,\n        alt: alt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FavoriteRecipesButton, \"IHpGwfwG0zEp/nS4tmt0of7OzFo=\");\n\n_c = FavoriteRecipesButton;\nFavoriteRecipesButton.propTypes = {\n  alt: PropTypes.string.isRequired,\n  datatestid: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  obj: PropTypes.objectOf(PropTypes.string).isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"FavoriteRecipesButton\");","map":{"version":3,"sources":["/home/lorene/Trybe/MeusProjetosPessoais/appReceitas/src/components/FavoriteRecipesButton.js"],"names":["PropTypes","React","useState","useEffect","useContext","WhiteHeartIcon","blackHeartIcon","verifyFavorites","setLocalStorage","Context","getlocalStorage","FavoriteRecipesButton","datatestid","alt","id","obj","FavoriteList","setList","isFavorite","setFavorite","handleClick","currentFavorites","removeFavorite","filter","item","prevState","propTypes","string","isRequired","objectOf"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,SAASC,eAAT,QAAgC,+BAAhC;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,eAAP,MAA4B,0BAA5B;;AAEA,eAAe,SAASC,qBAAT,OAA6D;AAAA;;AAAA,MAA9B;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,GAAd;AAAmBC,IAAAA,EAAnB;AAAuBC,IAAAA;AAAvB,GAA8B;AAC1E,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAA4Bb,UAAU,CAACK,OAAD,CAA5C;AACA,QAAM,CAACS,UAAD,EAAaC,WAAb,IAA4BjB,QAAQ,CAACK,eAAe,CAACO,EAAD,CAAhB,CAA1C;;AACA,QAAMM,WAAW,GAAG,MAAM;AACxB,UAAMC,gBAAgB,GAAGX,eAAe,CAAC,iBAAD,CAAxC;;AACA,QAAIH,eAAe,CAACO,EAAD,CAAnB,EAAyB;AACvB,YAAMQ,cAAc,GAAGD,gBAAgB,CAACE,MAAjB,CAAyBC,IAAD,IAAUA,IAAI,CAACV,EAAL,KAAYA,EAA9C,CAAvB;AACAN,MAAAA,eAAe,CAAC,iBAAD,EAAoBc,cAApB,CAAf;AACAL,MAAAA,OAAO,CAACK,cAAD,CAAP;AACD,KAJD,MAIO;AACLL,MAAAA,OAAO,CAAEQ,SAAD,IAAe,CAAC,GAAGA,SAAJ,EAAeV,GAAf,CAAhB,CAAP;AACD;AACF,GATD;;AAUAP,EAAAA,eAAe,CAAC,iBAAD,EAAoBQ,YAApB,CAAf;AAEAb,EAAAA,SAAS,CAAC,MAAMgB,WAAW,CAACZ,eAAe,CAACO,EAAD,CAAhB,CAAlB,CAAT;AAEA,sBACE;AAAA,2BACE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAGM,WAAhC;AAAA,6BACE;AACE,uBAAcR,UADhB;AAEE,QAAA,GAAG,EAAGM,UAAU,GAAGZ,cAAH,GAAoBD,cAFtC;AAGE,QAAA,GAAG,EAAGQ;AAHR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GA5BuBF,qB;;KAAAA,qB;AA8BxBA,qBAAqB,CAACe,SAAtB,GAAkC;AAChCb,EAAAA,GAAG,EAAEb,SAAS,CAAC2B,MAAV,CAAiBC,UADU;AAEhChB,EAAAA,UAAU,EAAEZ,SAAS,CAAC2B,MAAV,CAAiBC,UAFG;AAGhCd,EAAAA,EAAE,EAAEd,SAAS,CAAC2B,MAAV,CAAiBC,UAHW;AAIhCb,EAAAA,GAAG,EAAEf,SAAS,CAAC6B,QAAV,CAAmB7B,SAAS,CAAC2B,MAA7B,EAAqCC;AAJV,CAAlC","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { useState, useEffect, useContext } from 'react';\nimport WhiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport { verifyFavorites } from '../helpers/VerifyLocalStorage';\nimport setLocalStorage from '../helpers/createLocalStorage';\nimport Context from '../context/Context';\nimport getlocalStorage from '../helpers/getLocalStore';\n\nexport default function FavoriteRecipesButton({ datatestid, alt, id, obj }) {\n  const { FavoriteList, setList } = useContext(Context);\n  const [isFavorite, setFavorite] = useState(verifyFavorites(id));\n  const handleClick = () => {\n    const currentFavorites = getlocalStorage('favoriteRecipes');\n    if (verifyFavorites(id)) {\n      const removeFavorite = currentFavorites.filter((item) => item.id !== id);\n      setLocalStorage('favoriteRecipes', removeFavorite);\n      setList(removeFavorite);\n    } else {\n      setList((prevState) => [...prevState, obj]);\n    }\n  };\n  setLocalStorage('favoriteRecipes', FavoriteList);\n\n  useEffect(() => setFavorite(verifyFavorites(id)));\n\n  return (\n    <div>\n      <button type=\"button\" onClick={ handleClick }>\n        <img\n          data-testid={ datatestid }\n          src={ isFavorite ? blackHeartIcon : WhiteHeartIcon }\n          alt={ alt }\n        />\n      </button>\n    </div>\n  );\n}\n\nFavoriteRecipesButton.propTypes = {\n  alt: PropTypes.string.isRequired,\n  datatestid: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  obj: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}