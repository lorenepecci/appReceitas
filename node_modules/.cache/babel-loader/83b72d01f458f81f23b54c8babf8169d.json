{"ast":null,"code":"var _jsxFileName = \"/home/lorene/Trybe/MeusProjetosPessoais/appReceitas/src/components/ProgressComponent.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport React, { useContext, useEffect, useState } from 'react';\nimport Context from '../context/Context';\nimport setLocalStorage from '../helpers/createLocalStorage';\nimport getlocalStorage from '../helpers/getLocalStore';\nimport './inprogress.css';\nimport ProgressCard from './ProgressCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProgressComponent(_ref) {\n  _s();\n\n  let {\n    id,\n    foodOrDrink,\n    checkButton\n  } = _ref;\n  const {\n    listOfIngredients\n  } = useContext(Context);\n  const [checkedState, setCheckedState] = useState(new Array(Object.keys(listOfIngredients.ingredients).length).fill(false));\n  const [getInProgessRecipes, setGetInProgressRecipes] = useState(() => getlocalStorage('inProgressRecipes'));\n  const [ingredientsChecked, setingredientsChecked] = useState([]);\n  useEffect(() => {\n    const getRecipes = getlocalStorage('doneRecipes');\n\n    if (!getRecipes) {\n      setLocalStorage('doneRecipes', []);\n    }\n\n    if (!getInProgessRecipes) {\n      setGetInProgressRecipes({\n        meals: {},\n        cocktails: {}\n      });\n      setLocalStorage('inProgressRecipes', {\n        meals: {},\n        cocktails: {}\n      });\n    }\n  }, []);\n  useEffect(() => {\n    if (getInProgessRecipes) {\n      let listOfLocalStorage = [];\n      setCheckedState([]);\n\n      if (Object.keys(getInProgessRecipes.meals).some(key => key === id)) {\n        listOfLocalStorage = getInProgessRecipes.meals[`${id}`];\n      } else if (Object.keys(getInProgessRecipes.cocktails).some(key => key === id)) {\n        listOfLocalStorage = getInProgessRecipes.cocktails[`${id}`];\n      }\n\n      setingredientsChecked(listOfLocalStorage);\n      const lengthOfObject = Object.keys(listOfIngredients.ingredients).length;\n\n      for (let i = 0; i < lengthOfObject; i += 1) {\n        const ingredients = Object.values(listOfIngredients.ingredients);\n        const findIng = listOfLocalStorage.find(item => item === ingredients[i]);\n\n        if (findIng) {\n          setCheckedState(prev => [...prev, true]);\n        } else {\n          setCheckedState(prev => [...prev, false]);\n        }\n      }\n    }\n  }, [listOfIngredients]);\n  useEffect(() => {\n    if (ingredientsChecked.length) {\n      const mealsPrev = getInProgessRecipes.meals;\n      const cocktailsPrev = getInProgessRecipes.cocktails;\n      let newObj = {};\n\n      if (foodOrDrink === 'foods') {\n        const mealsNew = {\n          [id]: ingredientsChecked\n        };\n        newObj = {\n          meals: { ...mealsPrev,\n            ...mealsNew\n          },\n          cocktails: { ...cocktailsPrev\n          }\n        };\n      }\n\n      if (foodOrDrink === 'drinks') {\n        const drinksNew = {\n          [id]: ingredientsChecked\n        };\n        newObj = {\n          meals: { ...mealsPrev\n          },\n          cocktails: { ...cocktailsPrev,\n            ...drinksNew\n          }\n        };\n      }\n\n      setLocalStorage('inProgressRecipes', newObj);\n    } else if (getInProgessRecipes) {\n      const mealsPrev = getInProgessRecipes.meals;\n      const cocktailsPrev = getInProgessRecipes.cocktails;\n      let newObj = {};\n\n      if (foodOrDrink === 'drinks') {\n        const novo = Object.keys(cocktailsPrev).filter(key => key !== id).reduce((cur, key) => Object.assign(cur, {\n          [key]: cocktailsPrev[key]\n        }), {});\n        newObj = {\n          meals: { ...mealsPrev\n          },\n          cocktails: { ...novo\n          }\n        };\n      } else {\n        const novo = Object.keys(mealsPrev).filter(key => key !== id).reduce((cur, key) => Object.assign(cur, {\n          [key]: mealsPrev[key]\n        }), {});\n        newObj = {\n          meals: { ...novo\n          },\n          cocktails: { ...cocktailsPrev\n          }\n        };\n      }\n\n      setLocalStorage('inProgressRecipes', newObj);\n    }\n  }, [ingredientsChecked]);\n\n  const handleOnChange = position => {\n    const ingr = Object.values(listOfIngredients.ingredients)[position];\n    const updatedCheckedState = checkedState.map((item, index) => index === position ? !item : item);\n    setCheckedState(updatedCheckedState);\n\n    if (updatedCheckedState[position] === true) {\n      setingredientsChecked(prev => prev.concat(ingr));\n    } else {\n      setingredientsChecked(prev => prev.filter(i => i !== ingr));\n    }\n\n    checkButton(updatedCheckedState);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Ingredients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: checkedState.length && Object.values(listOfIngredients.ingredients).map((value, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          \"data-testid\": `${index}-ingredient-step`,\n          children: /*#__PURE__*/_jsxDEV(ProgressCard, {\n            checkedState: checkedState[index],\n            index: index,\n            measure: listOfIngredients.measure,\n            value: value,\n            handleOnChange: handleOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProgressComponent, \"iboOag10YXuiKSnRNIFhopIoKq0=\");\n\n_c = ProgressComponent;\nProgressComponent.propTypes = {\n  foodOrDrink: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  checkButton: PropTypes.func.isRequired\n};\nexport default ProgressComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProgressComponent\");","map":{"version":3,"sources":["/home/lorene/Trybe/MeusProjetosPessoais/appReceitas/src/components/ProgressComponent.js"],"names":["PropTypes","React","useContext","useEffect","useState","Context","setLocalStorage","getlocalStorage","ProgressCard","ProgressComponent","id","foodOrDrink","checkButton","listOfIngredients","checkedState","setCheckedState","Array","Object","keys","ingredients","length","fill","getInProgessRecipes","setGetInProgressRecipes","ingredientsChecked","setingredientsChecked","getRecipes","meals","cocktails","listOfLocalStorage","some","key","lengthOfObject","i","values","findIng","find","item","prev","mealsPrev","cocktailsPrev","newObj","mealsNew","drinksNew","novo","filter","reduce","cur","assign","handleOnChange","position","ingr","updatedCheckedState","map","index","concat","value","measure","propTypes","string","isRequired","func"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { useContext, useEffect, useState } from 'react';\nimport Context from '../context/Context';\nimport setLocalStorage from '../helpers/createLocalStorage';\nimport getlocalStorage from '../helpers/getLocalStore';\nimport './inprogress.css';\nimport ProgressCard from './ProgressCard';\n\nfunction ProgressComponent({ id, foodOrDrink, checkButton }) {\n  const {\n    listOfIngredients,\n  } = useContext(Context);\n  const [checkedState, setCheckedState] = useState(\n    new Array(Object.keys(listOfIngredients.ingredients).length)\n      .fill(false),\n  );\n  const [getInProgessRecipes, setGetInProgressRecipes] = useState(\n    () => getlocalStorage('inProgressRecipes'),\n  );\n  const [ingredientsChecked, setingredientsChecked] = useState([]);\n\n  useEffect(() => {\n    const getRecipes = getlocalStorage('doneRecipes');\n    if (!getRecipes) {\n      setLocalStorage('doneRecipes', []);\n    }\n    if (!getInProgessRecipes) {\n      setGetInProgressRecipes({\n        meals: {},\n        cocktails: {},\n      });\n      setLocalStorage('inProgressRecipes', {\n        meals: {},\n        cocktails: {},\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    if (getInProgessRecipes) {\n      let listOfLocalStorage = [];\n      setCheckedState([]);\n      if (Object.keys(getInProgessRecipes.meals).some((key) => key === id)) {\n        listOfLocalStorage = getInProgessRecipes.meals[`${id}`];\n      } else if (Object.keys(getInProgessRecipes.cocktails).some((key) => key === id)) {\n        listOfLocalStorage = getInProgessRecipes.cocktails[`${id}`];\n      }\n      setingredientsChecked(listOfLocalStorage);\n      const lengthOfObject = Object.keys(listOfIngredients.ingredients).length;\n      for (let i = 0; i < lengthOfObject; i += 1) {\n        const ingredients = Object.values(listOfIngredients.ingredients);\n        const findIng = listOfLocalStorage.find((item) => item === ingredients[i]);\n        if (findIng) {\n          setCheckedState((prev) => [...prev, true]);\n        } else {\n          setCheckedState((prev) => [...prev, false]);\n        }\n      }\n    }\n  }, [listOfIngredients]);\n\n  useEffect(() => {\n    if (ingredientsChecked.length) {\n      const mealsPrev = getInProgessRecipes.meals;\n      const cocktailsPrev = getInProgessRecipes.cocktails;\n      let newObj = {};\n      if (foodOrDrink === 'foods') {\n        const mealsNew = { [id]: ingredientsChecked };\n        newObj = {\n          meals: { ...mealsPrev, ...mealsNew },\n          cocktails: { ...cocktailsPrev },\n        };\n      }\n      if (foodOrDrink === 'drinks') {\n        const drinksNew = { [id]: ingredientsChecked };\n        newObj = {\n          meals: { ...mealsPrev },\n          cocktails: { ...cocktailsPrev, ...drinksNew },\n        };\n      }\n      setLocalStorage('inProgressRecipes', newObj);\n    } else if (getInProgessRecipes) {\n      const mealsPrev = getInProgessRecipes.meals;\n      const cocktailsPrev = getInProgessRecipes.cocktails;\n      let newObj = {};\n      if (foodOrDrink === 'drinks') {\n        const novo = Object.keys(cocktailsPrev)\n          .filter((key) => key !== id)\n          .reduce((cur, key) => Object.assign(cur, { [key]: cocktailsPrev[key] }), {});\n        newObj = {\n          meals: { ...mealsPrev },\n          cocktails: { ...novo },\n        };\n      } else {\n        const novo = Object.keys(mealsPrev)\n          .filter((key) => key !== id)\n          .reduce((cur, key) => Object.assign(cur, { [key]: mealsPrev[key] }), {});\n        newObj = {\n          meals: { ...novo },\n          cocktails: { ...cocktailsPrev },\n        };\n      }\n      setLocalStorage('inProgressRecipes', newObj);\n    }\n  }, [ingredientsChecked]);\n\n  const handleOnChange = (position) => {\n    const ingr = Object.values(listOfIngredients.ingredients)[position];\n    const updatedCheckedState = checkedState\n      .map((item, index) => (index === position ? !item : item));\n    setCheckedState(updatedCheckedState);\n    if (updatedCheckedState[position] === true) {\n      setingredientsChecked((prev) => prev.concat(ingr));\n    } else {\n      setingredientsChecked((prev) => prev.filter((i) => i !== ingr));\n    }\n    checkButton(updatedCheckedState);\n  };\n  return (\n    <div>\n      <h3>Ingredients</h3>\n      <div>\n        <ul>\n          { checkedState.length\n            && Object.values(listOfIngredients.ingredients).map((value, index) => (\n              <li key={ index } data-testid={ `${index}-ingredient-step` }>\n                <ProgressCard\n                  checkedState={ checkedState[index] }\n                  index={ index }\n                  measure={ listOfIngredients.measure }\n                  value={ value }\n                  handleOnChange={ handleOnChange }\n                />\n              </li>\n            ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\nProgressComponent.propTypes = {\n  foodOrDrink: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  checkButton: PropTypes.func.isRequired,\n};\nexport default ProgressComponent;\n"]},"metadata":{},"sourceType":"module"}